{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\n\nlet userSelectedDate = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n            startButton.disabled = true;\n        } else {\n            userSelectedDate = selectedDate;\n            startButton.disabled = false;\n        }\n    },\n};\n\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', () => {\n    if (!userSelectedDate) return;\n\n    startButton.disabled = true;\n    datetimePicker.disabled = true;\n\n    const intervalId = setInterval(() => {\n        const now = new Date();\n        const timeLeft = userSelectedDate - now;\n\n        if (timeLeft <= 0) {\n            clearInterval(intervalId);\n            datetimePicker.disabled = false;\n            return;\n        }\n\n        const time = convertMs(timeLeft);\n        updateTimer(time);\n    }, 1000);\n});\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n    daysElement.textContent = addLeadingZero(days);\n    hoursElement.textContent = addLeadingZero(hours);\n    minutesElement.textContent = addLeadingZero(minutes);\n    secondsElement.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["datetimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","options","selectedDates","selectedDate","iziToast","flatpickr","intervalId","timeLeft","time","convertMs","updateTimer","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"iyBAKA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9DJ,EAAY,SAAW,GAEvB,IAAIK,EAAmB,KAEvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFT,EAAY,SAAW,KAEvBK,EAAmBG,EACnBR,EAAY,SAAW,GAE9B,CACL,EAEAU,EAAUX,EAAgBO,CAAO,EAEjCN,EAAY,iBAAiB,QAAS,IAAM,CACxC,GAAI,CAACK,EAAkB,OAEvBL,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1B,MAAMY,EAAa,YAAY,IAAM,CAEjC,MAAMC,EAAWP,EADL,IAAI,KAGhB,GAAIO,GAAY,EAAG,CACf,cAAcD,CAAU,EACxBZ,EAAe,SAAW,GAC1B,MACH,CAED,MAAMc,EAAOC,EAAUF,CAAQ,EAC/BG,EAAYF,CAAI,CACnB,EAAE,GAAI,CACX,CAAC,EAED,SAASC,EAAUE,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASL,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACpDnB,EAAY,YAAcoB,EAAeJ,CAAI,EAC7Cf,EAAa,YAAcmB,EAAeH,CAAK,EAC/Cf,EAAe,YAAckB,EAAeF,CAAO,EACnDf,EAAe,YAAciB,EAAeD,CAAO,CACvD,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}